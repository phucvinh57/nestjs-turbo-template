export const HEADERS = {
	USER_AGENT: 'user-agent',
	CONTENT_TYPE: 'content-type',
	CONTENT_ENCODING: 'content-encoding',
	CONTENT_DISPOSITION: 'content-disposition',
	AUTHORIZATION: 'authorization',
} as const;

export const TTL: Readonly<Record<'ONE_MINUTE' | 'ONE_HOUR' | 'ONE_DAY' | 'ONE_WEEK' | 'ONE_MONTH', number>> = Object.freeze({
	ONE_MINUTE: 60,
	ONE_HOUR: 3600,
	ONE_DAY: 86400,
	ONE_WEEK: 604800,
	ONE_MONTH: 2592000,
});

export const SIZE: Readonly<Record<'KB' | 'MB' | 'GB' | 'TB', number>> = Object.freeze({
	KB: 1024,
	MB: 1024 ** 2,
	GB: 1024 ** 3,
	TB: 1024 ** 4,
	PT: 1024 ** 5,
});

// From common MIME types: https://developer.mozilla.org/en-US/docs/Web/HTTP/MIME_types/Common_types
export const CONTENT_TYPE = {
	AUDIO: {
		'.aac': 'audio/aac',
		'.mid': 'audio/midi',
		'.midi': 'audio/midi',
		'.mp3': 'audio/mpeg',
		'.oga': 'audio/ogg',
		'.opus': 'audio/ogg',
		'.wav': 'audio/wav',
		'.weba': 'audio/webm',
	} as Record<string, string>,
	VIDEO: {
		'.3g2': 'video/3gpp2',
		'.3gp': 'video/3gpp',
		'.avi': 'video/x-msvideo',
		'.mp4': 'video/mp4',
		'.mpeg': 'video/mpeg',
		'.ogv': 'video/ogg',
		'.ts': 'video/mp2t',
		'.webm': 'video/webm',
	} as Record<string, string>,
	IMAGE: {
		'.apng': 'image/apng',
		'.avif': 'image/avif',
		'.bmp': 'image/bmp',
		'.gif': 'image/gif',
		'.ico': 'image/vnd.microsoft.icon',
		'.jpeg': 'image/jpeg',
		'.jpg': 'image/jpeg',
		'.png': 'image/png',
		'.svg': 'image/svg+xml',
		'.tif': 'image/tiff',
		'.tiff': 'image/tiff',
		'.webp': 'image/webp',
	} as Record<string, string>,
	APPLICATION: {
		'.7z': 'application/x-7z-compressed',
		'.abw': 'application/x-abiword',
		'.arc': 'application/x-freearc',
		'.azw': 'application/vnd.amazon.ebook',
		'.bin': 'application/octet-stream',
		'.bz': 'application/x-bzip',
		'.bz2': 'application/x-bzip2',
		'.cda': 'application/x-cdf',
		'.csh': 'application/x-csh',
		'.doc': 'application/msword',
		'.docx': 'application/vnd.openxmlformats-officedocument.wordprocessingml.document',
		'.eot': 'application/vnd.ms-fontobject',
		'.epub': 'application/epub+zip',
		'.gz': 'application/gzip',
		'.jar': 'application/java-archive',
		'.json': 'application/json',
		'.jsonld': 'application/ld+json',
		'.mpkg': 'application/vnd.apple.installer+xml',
		'.odp': 'application/vnd.oasis.opendocument.presentation',
		'.ods': 'application/vnd.oasis.opendocument.spreadsheet',
		'.odt': 'application/vnd.oasis.opendocument.text',
		'.ogx': 'application/ogg',
		'.pdf': 'application/pdf',
		'.php': 'application/x-httpd-php',
		'.ppt': 'application/vnd.ms-powerpoint',
		'.pptx': 'application/vnd.openxmlformats-officedocument.presentationml.presentation',
		'.rar': 'application/vnd.rar',
		'.rtf': 'application/rtf',
		'.sh': 'application/x-sh',
		'.swf': 'application/x-shockwave-flash',
		'.tar': 'application/x-tar',
		'.vsd': 'application/vnd.visio',
		'.xhtml': 'application/xhtml+xml',
		'.xls': 'application/vnd.ms-excel',
		'.xlsx': 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',
		'.xml': 'application/xml',
		'.xul': 'application/vnd.mozilla.xul+xml',
		'.zip': 'application/zip',
	} as Record<string, string>,
	FONT: {
		'.otf': 'font/otf',
		'.ttf': 'font/ttf',
		'.woff': 'font/woff',
		'.woff2': 'font/woff2',
	} as Record<string, string>,
	TEXT: {
		'.css': 'text/css',
		'.csv': 'text/csv',
		'.htm': 'text/html',
		'.html': 'text/html',
		'.ics': 'text/calendar',
		'.js': 'text/javascript',
		'.mjs': 'text/javascript',
		'.txt': 'text/plain',
	} as Record<string, string>,
	OTHER: {
		'.3g2': 'video/3gpp2',
		'.3gp': 'video/3gpp',
	} as Record<string, string>,
};

export const CORS = (origin: string[] | '*' = '*', allowedHeaders: string[] = []) => ({
	origin,
	methods: ['HEAD', 'GET', 'PUT', 'POST', 'PATCH', 'DELETE'],
	credentials: true,
	preflightContinue: false,
	optionsSuccessStatus: 204,
	exposedHeaders: [HEADERS.CONTENT_DISPOSITION],
	allowedHeaders: [HEADERS.CONTENT_TYPE, HEADERS.CONTENT_ENCODING, HEADERS.AUTHORIZATION, ...allowedHeaders],
});
